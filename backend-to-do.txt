Eventfull To-do backend

Short-term technical stuff:
1. Add schema validation rules in mongodb

1. Calendar normalization (make a standardized calendar schema that includes all the key/values that google and microsoft have)
	- After retrieving a calendar from google/MS:
		2. save the data - make sure that events don't overwrite eachother
	- will need to make a cleaning pipeline - to change the calendar data coming in from google/microsoft to fit the schema

Calendar normalization stuffs:
1. create identical events in MS and google, and see if the normalized data is any different (it should be identical)
	- do this for different cases (ie inviting atendees, repeatable events, full day events, etc.)

ASAP:
## Connect to Calendars:
	- Google
	- Outlook
	- Apple
	- Make my own calendar 
	- Import ics?
	============
	- Given the user's credentials/permission, read the user's calendar 
	- Store the user's calendar data in MongoDB

2FA
Login with phone vs email

Later:
## Create an event scraping, cleaning, filtering, and storing pipeline
	- Scrape events data from various sources.
	- Normalize/clean the data.
	- Assign category(ies) to each event (ie Knicks game would be of type 'Basketball game')
		- May need to utilize an LLM for this - look into Llamma 2 - it's free, and can be pre-trained on our existing categories/types
	- Before storing the data, make sure the event does not already exist in storage.
## Cache the event names/categories in Redis

## Chat functionality


Post-MVP:
# Sign in via Facebook (import Facebook friends)
# Apple in via Apple (paid service - $100/year)
